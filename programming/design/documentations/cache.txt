                         Cache Emulation

l. Overview
Cacheing is an important means to enchance the performance of a computer, web site
by reducing the average access time to data/instructions stored in  their primary
/backstore locations.

This exercise consists of four main classes, an abstract cache interface class, 
an actual cache implementation class, a replacement policy class and a backstore
proxy class. note that backstore proxy can be modified to connect to remote backstore.

The cache replament algorithm  employed in the project is to select the least
recently visited to be evicted when all cache lines are used up. New algorithm
may be added easily by attching a new policy class to cache imp class as bridge
pattern is in play. new backstore can be attached  easily as well.

Other features include a wide use of template classes to allow instantiation of 
data types and tags at compile time. cache access are protected with mutexes, 
so multiple clients may use the cache in paralle. 

In testing, driver code may provision paramteers suchas, cache size and cache read
/write latency and backstore access latency.





